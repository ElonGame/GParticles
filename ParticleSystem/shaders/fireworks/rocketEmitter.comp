void onEmission()
{
	rocket_lifetimes[gid] = snoise(vec2(gid,gid*gid)) + 5;
	rocket_positions[gid] = conePositionGenerator();
	rocket_positions[gid] = spherePositionGenerator();
	rocket_velocities[gid].xyz = velocityGenerator(rocket_positions[gid].xyz);
	rocket_colors[gid] = vec4(0.9,0.1,0.1,1);
}

void main()
{
	uint gid = gl_GlobalInvocationID.x;

	/*LIMITERS*/
	if (atomicCounter(rocket_aliveParticles) >= rocket_maxParticles)
		return;

	if (rocket_lifetimes[gid] <= 0)
	{
		if (atomicCounterIncrement(rocket_emissionAttempts) < rocket_toCreate)
		{
			atomicCounterIncrement(rocket_aliveParticles);

			onEmission();
		}
	}
}
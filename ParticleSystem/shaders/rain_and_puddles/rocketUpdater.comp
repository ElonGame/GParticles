void kill()
{
	rocket_lifetimes[gid] = -1;

	atomicCounterDecrement(rocket_aliveParticles);
}

void bounce(vec3 normal)
{
	rocket_velocities[gid].xyz = reflect(rocket_velocities[gid].xyz, normal);
}

void stick()
{
	rocket_velocities[gid] = vec4(0);
}

uniform vec4 spheres[1];


void main()
{
	uint gid = gl_GlobalInvocationID.x;

	if (rocket_lifetimes[gid] <= 0)
		return;

	rocket_lifetimes[gid] -= 0.025;
	rocket_lineLifetime[gid] -= 0.025;

	if (rocket_lifetimes[gid] <= 0)
	{
		kill();
		return;
	}
	
	rocket_velocities[gid].y -= 0.00025;
	rocket_lastPositions[gid].xyz = rocket_positions[gid].xyz;
	rocket_positions[gid].xyz += rocket_velocities[gid].xyz;

	if (rocket_positions[gid].y < -4)
	{
		rocket_positions[gid].y = -4;
		rocket_floorHit[gid] = 1.0;
	}
}
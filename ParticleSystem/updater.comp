#version 430
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable
#extension GL_ARB_compute_variable_group_size : enable
layout(std140, binding = 4) buffer Pos
{
	vec4 Positions[];
};
layout(std140, binding = 5) buffer Vel
{
	vec4 Velocities[];
};
layout(binding = 6) uniform atomic_uint aliveParticles;
layout(local_size_variable) in;

void main()
{
	uint gid = gl_GlobalInvocationID.x;

	atomicCounterIncrement( aliveParticles );

	Positions[gid].xy = Positions[gid].xy + Velocities[gid].xy;

	if (Positions[gid].x > 1) Velocities[gid].x *= -1; 
	if (Positions[gid].x < -1) Velocities[gid].x *= -1; 
	if (Positions[gid].y > 1) Velocities[gid].y *= -1; 
	if (Positions[gid].y < -1) Velocities[gid].y *= -1; 

	if (atomicCounter( aliveParticles) > 10000)
	{
		Velocities[gid].x = 0;
		Velocities[gid].y = 0;
	}
}